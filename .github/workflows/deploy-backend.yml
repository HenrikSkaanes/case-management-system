name: Deploy Backend API

# Deploys backend Container App when backend code changes

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
  workflow_dispatch: # Manual trigger

env:
  AZURE_RESOURCE_GROUP: rg-case-management-dev
  ACR_NAME: acrcasemanagementdev
  CONTAINER_APP_NAME: ca-api-casemanagement-dev
  IMAGE_NAME: api

jobs:
  deploy-backend:
    name: 🐳 Build & Deploy Backend API
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔐 Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 🔑 Login to Azure Container Registry
        run: |
          az acr login --name ${{ env.ACR_NAME }}

      - name: 🐳 Build Docker Image
        run: |
          cd backend
          docker build \
            -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest \
            .
          echo "✅ Backend image built successfully!"

      - name: 📤 Push Docker Image to ACR
        run: |
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest
          echo "✅ Image pushed to ACR!"

      - name: 🔑 Get ACR Credentials
        id: acr-creds
        run: |
          ACR_USERNAME=$(az acr credential show --name ${{ env.ACR_NAME }} --query username -o tsv)
          ACR_PASSWORD=$(az acr credential show --name ${{ env.ACR_NAME }} --query "passwords[0].value" -o tsv)
          echo "::add-mask::$ACR_PASSWORD"
          echo "username=$ACR_USERNAME" >> $GITHUB_OUTPUT
          echo "password=$ACR_PASSWORD" >> $GITHUB_OUTPUT

      - name: 🔄 Set ACR Credentials for Container App
        run: |
          az containerapp registry set \
            --name ${{ env.CONTAINER_APP_NAME }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --server ${{ env.ACR_NAME }}.azurecr.io \
            --username ${{ steps.acr-creds.outputs.username }} \
            --password ${{ steps.acr-creds.outputs.password }}

      - name: 🚀 Update Container App
        run: |
          az containerapp update \
            --name ${{ env.CONTAINER_APP_NAME }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --image ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            --set-env-vars DATABASE_URL=secretref:database-url
          
          echo "✅ Backend API updated successfully!"

      - name: 🔐 Set Database URL Secret
        run: |
          az containerapp secret set \
            --name ${{ env.CONTAINER_APP_NAME }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --secrets database-url="${{ secrets.DATABASE_URL }}"

      - name: 📊 Get API URL
        id: get-url
        run: |
          url=$(az containerapp show \
            --name ${{ env.CONTAINER_APP_NAME }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --query 'properties.configuration.ingress.fqdn' \
            -o tsv)
          echo "url=https://$url" >> $GITHUB_OUTPUT

      - name: 🎉 Deployment Summary
        run: |
          echo "## 🚀 Backend API Deployed!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🔗 **API URL:** ${{ steps.get-url.outputs.url }}" >> $GITHUB_STEP_SUMMARY
          echo "📊 **API Docs:** ${{ steps.get-url.outputs.url }}/docs" >> $GITHUB_STEP_SUMMARY
          echo "🏥 **Health Check:** ${{ steps.get-url.outputs.url }}/health" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📦 **Image:** \`${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📅 **Deployed:** $(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
