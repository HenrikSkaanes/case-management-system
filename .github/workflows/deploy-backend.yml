name: Deploy Backend API

# Deploys backend Container App when backend code changes

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
  workflow_dispatch: # Manual trigger

env:
  AZURE_RESOURCE_GROUP: rg-case-management-dev
  ACR_NAME: acrcasemanagementdev
  CONTAINER_APP_NAME: ca-api-casemanagement-dev
  IMAGE_NAME: api

jobs:
  deploy-backend:
    name: Build & Deploy Backend API
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to Azure Container Registry
        run: |
          az acr login --name ${{ env.ACR_NAME }}

      - name: Build Docker Image
        run: |
          cd backend
          docker build \
            -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest \
            .
          echo "Backend image built successfully!"

      - name: Push Docker Image to ACR
        run: |
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest
          echo "Image pushed to ACR!"

      - name: Configure ACR Access with Managed Identity
        run: |
          # Get ACR resource ID
          ACR_ID=$(az acr show --name ${{ env.ACR_NAME }} --query id -o tsv)
          
          # Get Container App managed identity
          IDENTITY_ID=$(az containerapp show \
            --name ${{ env.CONTAINER_APP_NAME }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --query identity.principalId -o tsv)
          
          # Grant AcrPull role to Container App managed identity
          az role assignment create \
            --assignee $IDENTITY_ID \
            --role AcrPull \
            --scope $ACR_ID \
            || echo "Role assignment already exists"

      - name: Configure Container App Registry
        run: |
          az containerapp registry set \
            --name ${{ env.CONTAINER_APP_NAME }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --server ${{ env.ACR_NAME }}.azurecr.io \
            --identity system

      - name: Update Container App Image
        run: |
          az containerapp update \
            --name ${{ env.CONTAINER_APP_NAME }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --image ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
          
          echo "Backend API updated successfully!"

      - name: Get API URL
        id: get-url
        run: |
          url=$(az containerapp show \
            --name ${{ env.CONTAINER_APP_NAME }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --query 'properties.configuration.ingress.fqdn' \
            -o tsv)
          echo "url=https://$url" >> $GITHUB_OUTPUT

      - name: Deployment Summary
        run: |
          echo "## Backend API Deployed!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**API URL:** ${{ steps.get-url.outputs.url }}" >> $GITHUB_STEP_SUMMARY
          echo "**API Docs:** ${{ steps.get-url.outputs.url }}/docs" >> $GITHUB_STEP_SUMMARY
          echo "**Health Check:** ${{ steps.get-url.outputs.url }}/health" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** \`${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Deployed:** $(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
